TODO 

* consider where DB transactions may be necessary
* use https://developer.android.com/reference/android/provider/Telephony.Sms.Inbox.html to access sms inbox

LATER

* look at using cursor-adapters for lists
* include a last-successful-transmission time in case `medic-gateway` has issues reading webapp's response?
* consider authentication - some kind of shared secret?
* get list views working on a reload-on-scroll basis
* tests?
* static analysis?!
* continuous build?!?
* deploy APK to github on build?!?!
* use proper android styles/R-predefs for font size, color etc.
* work out if using a singleton for Db could be problematic
* update proguard config for alarm listener: "For production use, ProGuard may rename your AlarmListener class, which will foul up access to your metadata. To stop this from happening, you will need to add a -keep line to your ProGuard configuration file (e.g., proguard.cfg) to stop ProGuard from renaming it."
* implement a basic SMS composer that will work when using as default SMS app?


TODONT

* don't stop trying to sync when battery is low
* don't stop trying to sync when connectivity is gone
* don't add support for protocols beyond JSON
* don't add support for Twitter
* don't add support for keyword filtering
* don't add support for whitelists
* don't add support for blacklists
* don't add support for reading config from a QR code
* don't add support for changing the names of variables in the JSON schema
