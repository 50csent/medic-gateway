IN PROGRESS


TODO

* upgrade gradle to latest
* enable instrumented tests on travis (requires emulator)
* enable travis build matrix for check vs test vs connectedAndroidTest vs assembleDebug
* work out how `medic-gateway` currently handles multipart sms.  and work out how it _should_ handle them.  Reassembly would be very helpful...except in cases where only part of the message is received!  Likely worth looking at IntentProcessor.handleSmsReceived()
* look at using cursor-adapters for lists
* get list views working on a reload-on-scroll basis
* tests?
  - no `messages` in response should not cause a problem
  - messages received in a response should be saved to db
  - one bad message in response (e.g. missing fields) should not prevent good ones from being saved
  - WoMessage should not change status from DELIVERED -> anything else (e.g. DELIVERED -> SENT, DELIVERED -> FAILED)
* use proper android styles/R-predefs for font size, color etc.
* work out if using a singleton for Db could be problematic
* update proguard config for alarm listener: "For production use, ProGuard may rename your AlarmListener class, which will foul up access to your metadata. To stop this from happening, you will need to add a -keep line to your ProGuard configuration file (e.g., proguard.cfg) to stop ProGuard from renaming it."
* implement a basic SMS composer that will work when using as default SMS app?
* work out what the HeadlessSmsSendService is and if that needs an implementation too


TODONT

* don't stop trying to sync when battery is low
* don't stop trying to sync when connectivity is gone
* don't add support for protocols beyond JSON
* don't add support for Twitter
* don't add support for keyword filtering
* don't add support for whitelists
* don't add support for blacklists
* don't add support for reading config from a QR code
* don't add support for changing the names of variables in the JSON schema
