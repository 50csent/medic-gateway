IN PROGRESS


TODO

* work out how `medic-gateway` currently handles multipart sms.  and work out how it _should_ handle them.  Reassembly would be very helpful...except in cases where only part of the message is received!  Likely worth looking at IntentProcessor.handleSmsReceived()
* get list views working on a reload-on-scroll basis
* use proper android styles/R-predefs for font size, color etc.
* work out if using a singleton for Db could be problematic
* implement a basic SMS composer that will work when using as default SMS app?
* work out what the HeadlessSmsSendService is and if that needs an implementation too
* add option to switch back to the standard default SMS app
* document kitekat intent requirements in an obscure appendix somewhere
* retry failed WtMessages?
* research BroadcastReceiver.goAsync()
* test status_needs_updating is updated after sending status updates to webapp


TODONT

* don't stop trying to sync when battery is low
* don't stop trying to sync when connectivity is gone
* don't add support for protocols beyond JSON
* don't add support for Twitter
* don't add support for keyword filtering
* don't add support for whitelists
* don't add support for blacklists
* don't add support for reading config from a QR code
* don't add support for changing the names of variables in the JSON schema


THINGS TO TEST MANUALLY

on each of:

A. pre kitkat
B. kitkat+ (not default sms app)
C. kitkat+ (default sms app)

test:

* do received SMS get forwarded to webapp?
* do received SMS get deleted from inbox? (does not apply to `C`)
* do messages provided by webapp get sent as SMS?
* do deliery reports get propogated to webapp?
* does all of the above work when the device is sleeping?
* does the gateway/synch process restart when the phone is rebooted?
